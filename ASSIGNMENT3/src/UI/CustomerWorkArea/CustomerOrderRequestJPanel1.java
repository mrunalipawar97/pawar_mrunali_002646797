/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.CustomerWorkArea;

import Books.Book;
import Customer.Customer;
import Librarian.Librarian;
import LibraryAppSystem.ApplicationSystem;
import Librarian.Branch;
import LibraryAppSystem.UserAccount;
import Services.RentalRequest;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mrunalipawar
 */
public class CustomerOrderRequestJPanel1 extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderRequestJPanel
     */
    
    private ApplicationSystem applicationSystem;
    private UserAccount userAccount;
    private Branch branch;
    DefaultTableModel booksTableModel, magazinesTableModel, orderItemTableModel;

    public CustomerOrderRequestJPanel1() {
        initComponents();
    }
    
    public CustomerOrderRequestJPanel1(ApplicationSystem applicationSystem,  UserAccount userAccount) {
        initComponents();
        this.setVisible(true);
        this.applicationSystem = applicationSystem;
        //this.branch = branch;
        this.userAccount = userAccount;
        this.booksTableModel = (DefaultTableModel)booksJTable.getModel();
        this.magazinesTableModel = (DefaultTableModel)magazineJTable.getModel();
        this.orderItemTableModel = (DefaultTableModel)orderjTable.getModel();
        selectBranchJLabel.setText(userAccount.getUsername());
        populateBranchLocations();
        populateBooksCatelog();
        populateMagazinesCatelog();
        populateBranchLibrary();
        populateDropDown();
    }
   
    public void populateBranchLocations() {
        ArrayList<Branch> branchlists = this.applicationSystem.getBranchLists();
        for(Branch b : branchlists) {
            branchLocationComboBox.addItem(b.getLibrarian().getLocation());
        }
    }
    
    public void populateBranchLibrary() {
        libraryComboBox.removeAllItems();
        ArrayList<Branch> branchlists = this.applicationSystem.getBranchLists();
        String branchSelected = (String) branchLocationComboBox.getSelectedItem();
        for(Branch b : branchlists) {
            if(b.getLibrarian().getLocation().equals(branchSelected))
            libraryComboBox.addItem(b.getLibrarian());
        }
    }
    
    public void populateDropDown() {
        Librarian librarian = (Librarian) libraryComboBox.getSelectedItem();
        int bookSelected =  booksJTable.getSelectedRow();
        Book b = (Book) booksTableModel.getValueAt(bookSelected, 1);
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        booksJTable = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        addBookRequestButton1 = new javax.swing.JButton();
        addMagazineRequestButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        magazineJTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderjTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        bookOrderButton = new javax.swing.JButton();
        selectBranchJLabel = new javax.swing.JLabel();
        branchLocationComboBox = new javax.swing.JComboBox<>();
        selectBranchJLabel1 = new javax.swing.JLabel();
        libraryComboBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(204, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        booksJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Price", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(booksJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 550, 140));

        jLabel9.setText("Books Catelogs");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 20));

        addBookRequestButton1.setText("ADD BOOK");
        addBookRequestButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookRequestButton1ActionPerformed(evt);
            }
        });
        add(addBookRequestButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, 120, 30));

        addMagazineRequestButton.setText("ADD MAGAZINE");
        addMagazineRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMagazineRequestButtonActionPerformed(evt);
            }
        });
        add(addMagazineRequestButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, -1, 30));

        magazineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Price", "Availability"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(magazineJTable);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 550, 140));

        jLabel10.setText("Magazine Catelogs");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, -1, 20));

        orderjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item ID", "Item Name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(orderjTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 560, 130));

        jLabel8.setText("Order Item");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, -1, 20));

        bookOrderButton.setText("SUBMIT ORDER");
        bookOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookOrderButtonActionPerformed(evt);
            }
        });
        add(bookOrderButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 540, 130, 33));

        selectBranchJLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        selectBranchJLabel.setText("Select Branch");
        add(selectBranchJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 100, 30));

        add(branchLocationComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, 140, 30));

        selectBranchJLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        selectBranchJLabel1.setText("Select Library");
        add(selectBranchJLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 100, 30));

        add(libraryComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void addBookRequestButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookRequestButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBookRequestButton1ActionPerformed

    private void addMagazineRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMagazineRequestButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addMagazineRequestButtonActionPerformed

    private void bookOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookOrderButtonActionPerformed
        // TODO add your handling code here:
        Customer c = this.applicationSystem.getCustomerDirectory().findById(userAccount.getAccountId());
        Librarian l = null; //= this.branch.getLibrary().getLibrarianlist();
       // RentalRequest o = this.applicationSystem.getRentalRequestDirectory().createOrder(c, l);
        //c.addCustomerRequest(o);
    }//GEN-LAST:event_bookOrderButtonActionPerformed

    
    public void populateBooksCatelog() {
        booksTableModel.setRowCount(0);
        /*for (Material c: this.applicationSystem.getLibraryMaterial().getBooksCatelog().getBooklists()) {
          
            Object[] row = new Object[4];
           // System.out.println("c.getP id" + c.getPersonId());
                    
            row[0] = c.getSerialNumber();
            row[1] =c.getName();
            row[2] = c.isIsAvailablityFlag();
            row[3] = c.getRegisteredDate();
     
            itemsTableModel.addRow(row);
        }*/
    }
    
    public void populateMagazinesCatelog() {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookRequestButton1;
    private javax.swing.JButton addMagazineRequestButton;
    private javax.swing.JButton bookOrderButton;
    private javax.swing.JTable booksJTable;
    private javax.swing.JComboBox<String> branchLocationComboBox;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JComboBox libraryComboBox;
    private javax.swing.JTable magazineJTable;
    private javax.swing.JTable orderjTable;
    private javax.swing.JLabel selectBranchJLabel;
    private javax.swing.JLabel selectBranchJLabel1;
    // End of variables declaration//GEN-END:variables
}
